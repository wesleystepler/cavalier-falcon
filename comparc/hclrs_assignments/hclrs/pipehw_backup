########## the PC and condition codes registers #############
register fF { pc:64 = 0; }

# The values in each register were instantiated based on Figure 4.41 on page 424 of the textbook

# Fetch-Decode Pipeline Registers
register fD {
	icode:4 = NOP;
	#ifun:4 = NOP;
	valC:64 = 0;
	#valP:64 = 0;
	rA:4 = REG_NONE;
	rB:4 = REG_NONE;
	Stat:3 = STAT_AOK;
}

# Decode-Execute Pipeline Registers
register dE {
	icode_dE:4 = NOP;
	#ifun_dE:4 = NOP;
	#valA_dE:64 = 0;
	#valB_dE:64 = 0;
	valC_dE:64 = 0;
	#dstE_dE:4 = REG_NONE;
	#dstM_dE:4 = REG_NONE;
	#srcA_dE:4 = REG_NONE;
	#srcB_dE:4 = REG_NONE;
	Stat_dE:3 = STAT_AOK; 
}

# Execute-Memory Pipeline Registers
register eM {
	icode_eM:4 = NOP;
	valA_eM:64 = 0;
	valE_eM:64 = 0;
	dstE_eM:4 = REG_NONE;
	#dstM_eM:4 = REG_NONE;
	Stat_eM:3 = STAT_AOK;
}

# Memory-Writeback Pipeline Registers
register mW {
	icode_mW:4 = NOP;
	valE_mW:64 = 0;
	#valM_mW:64 = 0;
	#dstE_mW:4 = REG_NONE;
	#dstM_mW:64 = 0;
	Stat_mW:3 = STAT_AOK;
}